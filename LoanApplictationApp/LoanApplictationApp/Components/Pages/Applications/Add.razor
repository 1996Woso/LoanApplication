@page "/new-application"
@rendermode InteractiveServer
@inject IApplicationService applicationService 
@inject Calculations calculate
@attribute [Authorize]

<div class="container">
	<EditForm Model="application" OnValidSubmit="HandleValidSubmit" FormName="NewApplication">
		<DataAnnotationsValidator />
		<div class="card mt-5">
			<div class="card-header heading-form">
				<p>New application</p>
			</div>
			<div class="card-body">
				<div class="row">
					<div class="col-md-6 mb-3">
						<label>Monthly Salary</label>
						<InputNumber @bind-Value="application.MonthlySalary" class="form-control"/>
						<ValidationMessage For="() => application.MonthlySalary" class="validation-msg-font"/>
					</div>
					<div class="col-md-6 mb-3">
						<label>Credit Score</label>
						<InputNumber @bind-Value="application.CreditScore" class="form-control" />
						<ValidationMessage For="() => application.CreditScore" class="validation-msg-font"/>
					</div>
					<div class="col-md-6 mb-3">
						<label>Purchase Price</label>
						<InputNumber @bind-Value="application.PurchasePrice" class="form-control" />
						<ValidationMessage For="() => application.PurchasePrice" class="validation-msg-font"/>
					</div>
					<div class="col-md-6 mb-3">
						<label>Deposit</label>
						<InputNumber @bind-Value="application.Deposit" class="form-control" />
						<ValidationMessage For="() => application.Deposit" class="validation-msg-font"/>
					</div>
					<div class="col-md-12">
						<button type="submit" class="btn btn-dark w-100">Submit</button>
					</div>
				</div>
			</div>
		</div>
	</EditForm>
</div>

@if (successMessage != null)
{
	<SuccessMessage Message="@successMessage" IsDivDisplayed="true" />
}

@if (errorMessage != null)
{
	<ErrorMessage Message="@errorMessage" IsDivDisplayed="true" />
}

@code {
	private AddApplicationDTO application = new AddApplicationDTO();
	private string applicantId = "234344323433"; // Collect applicantId
	private string? successMessage = null;
	private string? errorMessage = null;
	private string? infoMessage = null;

	private async Task HandleValidSubmit()
	{
		try
		{
			var result = await applicationService.AddApplicationAsync(application, applicantId);
			successMessage = "Application added successfully!";
			errorMessage = null;
		}
		catch (Exception ex)
		{
			successMessage = null;
			errorMessage = $"Error: {ex.Message}";
		}
	}

}