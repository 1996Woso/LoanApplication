@page "/Account/ConfirmEmail"
@rendermode InteractiveServer

@using System.Text
@using LoanApplictationApp.Components.Account
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using LoanApplictationApp.Data

@inject UserManager<ApplicationUser> UserManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Confirm email</PageTitle>
<div class="card small-box" style="font-size:small">
    <div class="card-header heading-form">
        <p>Confirm email</p>
    </div>
    <div class="card-body">
        @*class="card-body alert @(string.IsNullOrEmpty(successMessage)? "alert-danger":"alert-success")"*@
        @if (!string.IsNullOrEmpty(successMessage))
        {
            <SuccessMessage MarkupMessage="@MarkupMessage" IsDivDisplayed = "true"/>
            @*<a class="btn-link" href="/Account/Login">Login</a>*@
        }
        else if (!string.IsNullOrEmpty(errorMessage))
        {
            <ErrorMessage Message="@errorMessage" IsDivDisplayed= "true" />
        }
    </div>
</div>



@code {
    private string? errorMessage;
    private string? successMessage = "";
    private MarkupString MarkupMessage;
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? UserId { get; set; }

    [SupplyParameterFromQuery]
    private string? Code { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (UserId is null || Code is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByIdAsync(UserId);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            errorMessage = $"Error loading user with ID {UserId}";
        }
        else
        {
            var code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
            var result = await UserManager.ConfirmEmailAsync(user, code);
            if (result.Succeeded)
            {
                successMessage = "success";
                MarkupMessage = (MarkupString)@"Your accouunt has been successful confirmed. Please <a href='Account/Login'> click here to log in </a>.";
            }
            else
            {
                errorMessage = "Error confirming your email.";
            }
            // statusMessage = result.Succeeded ? "Thank you for confirming your email." : "Error confirming your email.";
        }
    }
}
