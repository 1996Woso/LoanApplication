@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager
@*this is for bootstrap icons*@
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

@if (User != null)
{
    <nav class="navbar navbar-nav navbar-expand-lg navbar-light" style="background-color:lightseagreen; height:50px">
        <div class="container-fluid">
            <div class="navbar-text text-white" style="font-weight: bold">
                <p>@User.Name @User.Surname</p>
            </div>
            <div class="navbar-text text-white mb-2" style="font-weight:bold">
                @if (Roles != null && Roles.Any())
                {
                    @String.Join(" | ",Roles)
                }
            </div>
        </div>
    </nav>
}
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="" target="_blank">Apply for a loan</a>
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About us?</a>
            @* <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a> *@
        </div>
        <article class="content px-4">
            @Body
        </article>
   @*      <footer >
            <div class="container align-text-center">
                &copy; @DateTime.Now.Year - XYZ Loans
            </div>
        </footer> *@
    </main>
</div>

@code {
    private ApplicationUser? User;
    private List<string> Roles = new();

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity!.IsAuthenticated)
        {
            User = await UserManager.GetUserAsync(user);
            if(User != null)
            {
                Roles = (await UserManager.GetRolesAsync(User)).ToList();
            }
        }
    }
}