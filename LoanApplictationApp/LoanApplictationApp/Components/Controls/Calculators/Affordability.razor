@rendermode InteractiveServer
@inject Services.Calculations calculate

<div class="card w-50 mx-auto" style="min-width:25rem">
    <div class="card-header text-center" style="background-color:lightblue">
        <h2>Bond Affordability Calculator</h2>
        @* <hr style="height:0.5rem;" /> *@
    </div>
    <div class="card-body">
        @if (model != null)
        {
            <EditForm Model="model">
                <div class="container">
                    <div class="row mb-2">
                        <div class="mb-2 col-md-6 form-floating">
                            @*  <input type="number" @bind="model.GrossIncome" @bind:event="oninput" class="form-control"/> *@
                            <InputNumber @bind-Value="model.GrossIncome" class="form-control" @oninput="@(e => calculate.OnInputDecimal(e,value => model.GrossIncome = value,model))" />
                            <label>Gross Monthly Income (R)</label>
                            <ValidationMessage For="() => model.GrossIncome" class="text-danger" />
                        </div>
                        <div class="mb-2 col-md-6 form-floating">
                            @* <input type="number" @bind="model.i" @bind:event="oninput" class="form-control" /> *@
                            <InputNumber @bind-Value="model.i" @oninput="@(e => calculate.OnInputDecimal(e, value => model.i = value,model))" class="form-control" />
                            <label>Interest Rate (%)</label>
                        </div>
                        <div class="col-md-12 form-floating">
                            @* <input type="number" @bind="model.n" @bind:event="oninput" class="form-control" /> *@
                            <InputNumber @bind-Value="model.n" class="form-control" @oninput="@(e => calculate.OnInputInteger(e,value => model.n = value,model))" />
                            <label>Period (Years)</label>
                            <ValidationMessage For="() => model.n" class="text-danger" />
                        </div>
                    </div>
                    <div>
                        @if (model.GrossIncome.HasValue && model.i.HasValue && model.n.HasValue)
                        {
                            @if (model.MaxAffordLoan.HasValue && model.MaxAffordInstall.HasValue)
                            {
                                <div class="alert alert-info">
                                    <pre>
                                    <i>Gross Monthly Income           :R @model.GrossIncome</i>
                                                </pre>
                                    <pre>
                                    <i>Interest Rate                  :% @model.i</i>
                                                </pre>
                                    <pre>
                                    <i>Number Of Years                :@model.n years</i>
                                                </pre>
                                    <pre>
                                    <i>Maximum affordable loan        :R @model.MaxAffordLoan</i>
                                                </pre>
                                    <pre>
                                    <i>Maximum affordable installment :R @model.MaxAffordInstall</i>
                                                </pre>
                                </div>
                            }
                        }
                    </div>
                </div>
                
            </EditForm>
        }
    </div>
</div>

@code {
    private Models.Affordability? model = new Models.Affordability();
}
